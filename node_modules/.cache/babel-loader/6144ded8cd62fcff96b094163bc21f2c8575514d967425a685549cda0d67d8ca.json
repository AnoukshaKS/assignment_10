{"ast":null,"code":"var _jsxFileName = \"/Users/anoukshasreemurthy/Downloads/weather-forecast-app/src/WeatherContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WeatherData from \"./WeatherData\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar moment = require(\"moment\");\nfunction WeatherContainer() {\n  _s();\n  const [completeData, setCompleteData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [cityName, setCityName] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  let display;\n  if (completeData.length > 0 || hasError === false) {\n    display = displayData();\n  }\n  function changeText(event) {\n    setCityName(event.target.value);\n  }\n  function displayData() {\n    return dailyData.map((reading, index) => /*#__PURE__*/_jsxDEV(WeatherData, {\n      reading: reading,\n      completeData: completeData,\n      cityName: cityName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  function refreshData() {\n    const _url = `http://api.openweathermap.org/data/2.5/forecast?q=${cityName}&units=imperial&APPID=cf254fc2e8c1796d93e00ae4dd4399e0`;\n    fetch(_url).then(res => res.json()).then(data => {\n      const _data = data.list.filter(reading => reading.dt_txt.includes(\"00:00:00\"));\n      data.list.map(function (name) {\n        let _date = new Date();\n        const weekday = name.dt * 1000;\n        _date.setTime(weekday);\n        name.day = moment(_date).format(\"dddd\");\n        return name;\n      });\n      setCompleteData(data.list);\n      setHasError(false);\n      setDailyData(_data);\n      localStorage.setItem(\"data\", JSON.stringify(_data));\n      setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n    }).catch(err => {\n      setCompleteData([]);\n      setHasError(true);\n      setDailyData([]);\n    });\n  }\n  useEffect(() => {\n    if (localStorage.getItem(\"data\")) {\n      setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [cityName, \" Weather Prediction\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputCard\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-name\",\n        label: \"Type Your City\",\n        value: cityName,\n        onChange: changeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        className: \"btn btn-primary mt-3\",\n        value: \"Go\",\n        onClick: refreshData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherContainer, \"SCZyyO7PSD0fVpVXFm/Ci2dvWqY=\");\n_c = WeatherContainer;\nexport default WeatherContainer;\nvar _c;\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"names":["React","useState","useEffect","WeatherData","TextField","jsxDEV","_jsxDEV","moment","require","WeatherContainer","_s","completeData","setCompleteData","dailyData","setDailyData","cityName","setCityName","hasError","setHasError","display","length","displayData","changeText","event","target","value","map","reading","index","fileName","_jsxFileName","lineNumber","columnNumber","refreshData","_url","fetch","then","res","json","data","_data","list","filter","dt_txt","includes","name","_date","Date","weekday","dt","setTime","day","format","localStorage","setItem","JSON","stringify","parse","getItem","catch","err","className","children","id","label","onChange","type","onClick","_c","$RefreshReg$"],"sources":["/Users/anoukshasreemurthy/Downloads/weather-forecast-app/src/WeatherContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherData from \"./WeatherData\";\nimport TextField from \"@material-ui/core/TextField\";\nvar moment = require(\"moment\");\n\nfunction WeatherContainer() {\n  const [completeData, setCompleteData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [cityName, setCityName] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n\n  let display;\n  if (completeData.length > 0 || hasError === false) {\n    display = displayData();\n  }\n\n  function changeText(event) {\n    setCityName(event.target.value);\n  }\n\n  function displayData() {\n    return dailyData.map((reading, index) => (\n      <WeatherData\n        reading={reading}\n        key={index}\n        completeData={completeData}\n        cityName={cityName}\n      />\n    ));\n  }\n\n  function refreshData() {\n    const _url = `http://api.openweathermap.org/data/2.5/forecast?q=${cityName}&units=imperial&APPID=cf254fc2e8c1796d93e00ae4dd4399e0`;\n    fetch(_url)\n      .then((res) => res.json())\n      .then((data) => {\n        const _data = data.list.filter((reading) =>\n          reading.dt_txt.includes(\"00:00:00\")\n        );\n        data.list.map(function (name) {\n          let _date = new Date();\n          const weekday = name.dt * 1000;\n          _date.setTime(weekday);\n          name.day = moment(_date).format(\"dddd\");\n          return name;\n        });\n\n        setCompleteData(data.list);\n        setHasError(false);\n        setDailyData(_data);\n        localStorage.setItem(\"data\", JSON.stringify(_data));\n        setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n      })\n      .catch((err) => {\n        setCompleteData([]);\n        setHasError(true);\n        setDailyData([]);\n      });\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"data\")) {\n      setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n    }\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <br />\n      <h2>{cityName} Weather Prediction</h2>\n      <div className=\"inputCard\">\n        <TextField\n          id=\"outlined-name\"\n          label=\"Type Your City\"\n          value={cityName}\n          onChange={changeText}\n        />\n        <br />\n        <input\n          type=\"button\"\n          className=\"btn btn-primary mt-3\"\n          value=\"Go\"\n          onClick={refreshData}\n        />\n      </div>\n      <br />\n\n      <div>{display}</div>\n    </div>\n  );\n}\nexport default WeatherContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}